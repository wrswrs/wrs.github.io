<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王小柯</title>
  
  <subtitle>王小柯的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wrswrs.github.io/"/>
  <updated>2020-07-23T08:17:43.301Z</updated>
  <id>https://wrswrs.github.io/</id>
  
  <author>
    <name>王小柯</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Hexo+GitHub搭建博客</title>
    <link href="https://wrswrs.github.io/2020/07/20/hexo-github/"/>
    <id>https://wrswrs.github.io/2020/07/20/hexo-github/</id>
    <published>2020-07-20T03:15:00.000Z</published>
    <updated>2020-07-23T08:17:43.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>📰博客 —— 可能在如今这个互联网发达的大环境中，已经慢慢很少有人关注。不如那些社交平台可以快速的发布文章、图片、视频；并且可以快速的获取关注与点赞。博客这种慢生活形式已经渐渐淡出人们的视线。</p></blockquote><p>👦然而我不这样认为，我觉得能在互联网中拥有一个自己的域名，自己的博客，自己的一片安静的空间，也是一件很有意义的事情。<br>而且身为一个💻程序员，更应该写写自己的技术文章，为自己的学习历程留下痕迹。</p><p>其实几天前我就开始</p><div class="note danger default">            <p>本篇文章全部自己码字、截图，未经本人授权许可，谢绝转载和二次创作！</p>          </div><h2 id="初识-Hexo"><a href="#初识-Hexo" class="headerlink" title="初识 Hexo"></a>初识 Hexo</h2><h3 id="为什么是Hexo-Github"><a href="#为什么是Hexo-Github" class="headerlink" title="为什么是Hexo + Github"></a>为什么是Hexo + Github</h3><p>常见的静态博客框架有 <code>Hexo、Hugo、Jekyll</code> 等等，这里博主使用的是 <code>Hexo</code>。为什么使用 <code>Hexo</code> 和 <code>Github Pages</code>？</p><ul><li>Hexo 拥有庞大的社区 / 开源支持，而且博主作为一名前端程序员，基于 Node.js 的架构使用起来亲切。</li><li>Hexo 提供的主题种类繁多，有些很好看，同时有着丰富的插件。</li><li>使用Github这样免费的空间即可以节省一些费用，也节省一些打理的时间，只需要专心写文章。</li></ul><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>使用Hexo 需要准备 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a> 和 <a href="https://git-scm.com/" target="_blank" rel="noopener">git</a><br>按照官网指示安装即可，若有问题可百度查询。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>✅安装好Node.js 和 git 之后就可以开始安装我们的Hexo啦。<br>全局安装 <code>hexo-cli</code> 所以我们在任意菜单右键点击<code>Git Bash Here</code> 使用 <code>Npm</code> 安装 <code>hexo</code> 进行如下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化项目文件夹"><a href="#初始化项目文件夹" class="headerlink" title="初始化项目文件夹"></a>初始化项目文件夹</h3><p>在准备存储项目的文件夹下右键点击Git Bash Here 输入如下初始化 hexo 文件夹(这里 hexo 初始化也会直接建立一个新的文件夹)：<br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/wrswrs/CDN/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%AC%94%E8%AE%B0/01.png" alt="右键选择"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init hexo</span><br></pre></td></tr></table></figure><p>这时遍自动建立了一个名为 <code>hexo</code> 的文件夹，其目录结构如下：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/wrswrs/CDN/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%AC%94%E8%AE%B0/02.png" alt="目录结构"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">├── _config.yml   # 全局配置文件</span><br><span class="line">├── package.json  # npm包已经项目信息</span><br><span class="line">├─.deploy_git  # 部署git后生成</span><br><span class="line">├─node_modules  # 扩展依赖</span><br><span class="line">├─public  # 生成的静态网站</span><br><span class="line">├─scaffolds  # 模版文件夹</span><br><span class="line">├─source  # 资源文件夹</span><br><span class="line">│ ├─img  # 图片资源</span><br><span class="line">│ └─_drafts  # 草稿&#x2F;模板文件</span><br><span class="line">│ └─_posts  # 文章Markdown文件</span><br><span class="line">└─themes  # 主题</span><br><span class="line">    ├─landscape  # 语言文件夹</span><br><span class="line">    └─butterfly  # 使用的主题</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p><code>Node</code>项目需使用<code>ppm</code>安装依赖后运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="comment">#清除生成的博客静态文件</span></span><br><span class="line">$ hexo g <span class="comment">#生成博客静态文件</span></span><br><span class="line">$ hexo s <span class="comment">#启动博客的本地预览</span></span><br><span class="line">$ hexo d <span class="comment">#推送博客到远程仓库</span></span><br><span class="line">$ hexo new page xxx <span class="comment">#新建名为"xxx"的页面</span></span><br><span class="line">$ hexo new xxx <span class="comment">#新建名为"xxx"的文章</span></span><br><span class="line">$ hexo d -g <span class="comment">#生成静态博客并推送到Git远程仓库</span></span><br><span class="line">$ hexo s -g <span class="comment">#生成静态博客并启动本地预览</span></span><br></pre></td></tr></table></figure><h3 id="本地预览调试"><a href="#本地预览调试" class="headerlink" title="本地预览调试"></a>本地预览调试</h3><p>输入以下命令本地启动就可以预览博客了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/wrswrs/CDN/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%AC%94%E8%AE%B0/03.png" alt="运行"></p><p>回车后打开浏览器，输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 就可以预览你的博客了</p><h2 id="关联Github仓库"><a href="#关联Github仓库" class="headerlink" title="关联Github仓库"></a>关联Github仓库</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><ul><li>注册并登陆<code>github</code></li><li>新建一个名为 <code>username.github.io</code> 的 Public 仓库，其中 <code>username</code> 是你的 <code>Github</code> 用户名。</li><li>点击仓库的<code>seeting</code>选 Github Pages<br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/wrswrs/CDN/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%AC%94%E8%AE%B0/04.png" alt="Git Pages"></li></ul><h3 id="关联仓库"><a href="#关联仓库" class="headerlink" title="关联仓库"></a>关联仓库</h3><p>配置_config.yml文件，来建立关联<br>翻到文件的最下面，修改为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://github.com/username/username.github.io.git</span> <span class="comment"># 将username修改成你的Github用户名</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment">#表示部署到仓库的master(主)分支</span></span><br></pre></td></tr></table></figure><h3 id="安装Hexo的Git插件"><a href="#安装Hexo的Git插件" class="headerlink" title="安装Hexo的Git插件"></a>安装Hexo的Git插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="推送步骤"><a href="#推送步骤" class="headerlink" title="推送步骤"></a>推送步骤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="comment"># 清空本地的静态文件</span></span><br><span class="line">$ hexo g <span class="comment"># 生成新的静态文件</span></span><br><span class="line">$ hexo s <span class="comment"># 本地预览</span></span><br><span class="line">$ hexo d <span class="comment"># 推送静态文件到Git仓库</span></span><br></pre></td></tr></table></figure><p>✅至此，你的博客就搭建成功啦。</p><h2 id="推荐主题"><a href="#推荐主题" class="headerlink" title="推荐主题"></a>推荐主题</h2><p>Hexo 提供了丰富的主题供选择，博主这里使用的是 <a href="https://demo.jerryc.me/" target="_blank" rel="noopener">butterfly</a> 主题</p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>修改根目录的 <code>_config.yml</code>文件，修改主题，改为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      搭建一个属于自己的博客
    
    </summary>
    
    
      <category term="随笔分享" scheme="https://wrswrs.github.io/categories/%E9%9A%8F%E7%AC%94%E5%88%86%E4%BA%AB/"/>
    
      <category term="建站指北" scheme="https://wrswrs.github.io/categories/%E9%9A%8F%E7%AC%94%E5%88%86%E4%BA%AB/%E5%BB%BA%E7%AB%99%E6%8C%87%E5%8C%97/"/>
    
    
      <category term="Test" scheme="https://wrswrs.github.io/tags/Test/"/>
    
      <category term="vue" scheme="https://wrswrs.github.io/tags/vue/"/>
    
  </entry>
  
</feed>
